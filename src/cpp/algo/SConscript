# -*-python-*-
import os
pj= os.path.join

Import( "env" )

# 1. Call other SConscript files in sub directories and build the library

lib_env= env.Copy()

includes= lib_env.ALEAGlob('*.h')
lib_env.ALEAIncludes( "plantgl/algo", includes )

dirs=lib_env.ALEAGlob('SConscript','*') 
dirs= filter(lambda x: 'codec' not in x, dirs)

# install headers
lib_env.SConscript( dirs, exports = { "env" : lib_env } )

# install headers and retrieve sources generated by flex/bison
sources= lib_env.SConscript('codec/SConscript', exports = { "env" : lib_env } )

# sources
sources+= lib_env.ALEAGlob('*.cpp', dir = '*')

# Add defines to export symbols on Windows
DEFINES= list(lib_env['CPPDEFINES'])
DEFINES.append('ALGO_MAKEDLL')

# Link with the following libraries
LIBRARIES = list( lib_env['LIBS'] )
LIBRARIES.extend( ['qhull','pgltool','pglmath','pglsg'] )

lib_env.ALEALibrary( "pglalgo",
                     sources, 
                     CPPDEFINES = DEFINES, 
                     LIBS = LIBRARIES )


